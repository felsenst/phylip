# Makefile.in generated by automake 1.9.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/phylip
pkglibdir = $(libdir)/phylip
pkgincludedir = $(includedir)/phylip
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = clique$(EXEEXT) codml$(EXEEXT) consense$(EXEEXT) \
	contml$(EXEEXT) contrast$(EXEEXT) dnacomp$(EXEEXT) \
	dnadist$(EXEEXT) dnainvar$(EXEEXT) dnaml$(EXEEXT) \
	dnamlk$(EXEEXT) dnamove$(EXEEXT) dnapenny$(EXEEXT) \
	dnapars$(EXEEXT) dolmove$(EXEEXT) dollop$(EXEEXT) \
	dolpenny$(EXEEXT) drawgram$(EXEEXT) drawtree$(EXEEXT) \
	factor$(EXEEXT) fitch$(EXEEXT) gendist$(EXEEXT) \
	kitsch$(EXEEXT) mix$(EXEEXT) move$(EXEEXT) neighbor$(EXEEXT) \
	pars$(EXEEXT) penny$(EXEEXT) proml$(EXEEXT) promlk$(EXEEXT) \
	protdist$(EXEEXT) protpars$(EXEEXT) restdist$(EXEEXT) \
	restml$(EXEEXT) retree$(EXEEXT) seqboot$(EXEEXT) \
	threshml$(EXEEXT) treedist$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = appNames

# no other flags if user set
am__append_2 = $(debugflags)
#am__append_3 = -DNDEBUG
# no other flags if user set
#am__append_4 = $(optflags)
#am__append_5 = -fprofile-arcs -ftest-coverage
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure config/compile config/config.guess \
	config/config.sub config/depcomp config/install-sh \
	config/missing config/mkinstalldirs
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
#am__EXEEXT_1 = appNames$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
appNames_SOURCES = appNames.c
appNames_OBJECTS = appNames.$(OBJEXT)
appNames_LDADD = $(LDADD)
am__objects_1 = phylip.$(OBJEXT) Slist.$(OBJEXT)
am_clique_OBJECTS = $(am__objects_1) clique.$(OBJEXT) disc.$(OBJEXT)
clique_OBJECTS = $(am_clique_OBJECTS)
clique_LDADD = $(LDADD)
am_codml_OBJECTS = $(am__objects_1) codml.$(OBJEXT) ml.$(OBJEXT) \
	seq.$(OBJEXT)
codml_OBJECTS = $(am_codml_OBJECTS)
codml_LDADD = $(LDADD)
am_consense_OBJECTS = $(am__objects_1) consense.$(OBJEXT) \
	cons.$(OBJEXT)
consense_OBJECTS = $(am_consense_OBJECTS)
consense_LDADD = $(LDADD)
am_contml_OBJECTS = $(am__objects_1) contml.$(OBJEXT) cont.$(OBJEXT) \
	ml.$(OBJEXT)
contml_OBJECTS = $(am_contml_OBJECTS)
contml_LDADD = $(LDADD)
am_contrast_OBJECTS = $(am__objects_1) contrast.$(OBJEXT) \
	cont.$(OBJEXT)
contrast_OBJECTS = $(am_contrast_OBJECTS)
contrast_LDADD = $(LDADD)
am_dnacomp_OBJECTS = $(am__objects_1) dnacomp.$(OBJEXT) seq.$(OBJEXT) \
	parsimony.$(OBJEXT) dnaparsimony.$(OBJEXT)
dnacomp_OBJECTS = $(am_dnacomp_OBJECTS)
dnacomp_LDADD = $(LDADD)
am_dnadist_OBJECTS = $(am__objects_1) dnadist.$(OBJEXT) seq.$(OBJEXT) \
	matrixd.$(OBJEXT) pmatrix.$(OBJEXT)
dnadist_OBJECTS = $(am_dnadist_OBJECTS)
dnadist_LDADD = $(LDADD)
am_dnainvar_OBJECTS = $(am__objects_1) dnainvar.$(OBJEXT) \
	seq.$(OBJEXT)
dnainvar_OBJECTS = $(am_dnainvar_OBJECTS)
dnainvar_LDADD = $(LDADD)
am_dnaml_OBJECTS = $(am__objects_1) dnaml.$(OBJEXT) seq.$(OBJEXT) \
	ml.$(OBJEXT)
dnaml_OBJECTS = $(am_dnaml_OBJECTS)
dnaml_LDADD = $(LDADD)
am_dnamlk_OBJECTS = $(am__objects_1) dnamlk.$(OBJEXT) seq.$(OBJEXT) \
	ml.$(OBJEXT)
dnamlk_OBJECTS = $(am_dnamlk_OBJECTS)
dnamlk_LDADD = $(LDADD)
am_dnamove_OBJECTS = $(am__objects_1) dnamove.$(OBJEXT) seq.$(OBJEXT) \
	moves.$(OBJEXT) parsimony.$(OBJEXT) dnaparsimony.$(OBJEXT)
dnamove_OBJECTS = $(am_dnamove_OBJECTS)
dnamove_LDADD = $(LDADD)
am_dnapars_OBJECTS = $(am__objects_1) dnapars.$(OBJEXT) seq.$(OBJEXT) \
	parsimony.$(OBJEXT) dnaparsimony.$(OBJEXT)
dnapars_OBJECTS = $(am_dnapars_OBJECTS)
dnapars_LDADD = $(LDADD)
am_dnapenny_OBJECTS = $(am__objects_1) dnapenny.$(OBJEXT) \
	seq.$(OBJEXT) parsimony.$(OBJEXT) dnaparsimony.$(OBJEXT)
dnapenny_OBJECTS = $(am_dnapenny_OBJECTS)
dnapenny_LDADD = $(LDADD)
am_dollop_OBJECTS = $(am__objects_1) dollop.$(OBJEXT) disc.$(OBJEXT) \
	dollo.$(OBJEXT)
dollop_OBJECTS = $(am_dollop_OBJECTS)
dollop_LDADD = $(LDADD)
am_dolmove_OBJECTS = $(am__objects_1) dolmove.$(OBJEXT) disc.$(OBJEXT) \
	moves.$(OBJEXT) dollo.$(OBJEXT)
dolmove_OBJECTS = $(am_dolmove_OBJECTS)
dolmove_LDADD = $(LDADD)
am_dolpenny_OBJECTS = $(am__objects_1) dolpenny.$(OBJEXT) \
	disc.$(OBJEXT) dollo.$(OBJEXT)
dolpenny_OBJECTS = $(am_dolpenny_OBJECTS)
dolpenny_LDADD = $(LDADD)
am__objects_2 = drawgram-phylip.$(OBJEXT) drawgram-Slist.$(OBJEXT)
am_drawgram_OBJECTS = $(am__objects_2) drawgram-drawgram.$(OBJEXT) \
	drawgram-draw.$(OBJEXT) drawgram-draw2.$(OBJEXT)
drawgram_OBJECTS = $(am_drawgram_OBJECTS)
drawgram_DEPENDENCIES =
am__objects_3 = drawtree-phylip.$(OBJEXT) drawtree-Slist.$(OBJEXT)
am_drawtree_OBJECTS = $(am__objects_3) drawtree-drawtree.$(OBJEXT) \
	drawtree-draw.$(OBJEXT) drawtree-draw2.$(OBJEXT)
drawtree_OBJECTS = $(am_drawtree_OBJECTS)
drawtree_DEPENDENCIES =
am_factor_OBJECTS = $(am__objects_1) factor.$(OBJEXT)
factor_OBJECTS = $(am_factor_OBJECTS)
factor_LDADD = $(LDADD)
am_fitch_OBJECTS = $(am__objects_1) fitch.$(OBJEXT) dist.$(OBJEXT) \
	ml.$(OBJEXT)
fitch_OBJECTS = $(am_fitch_OBJECTS)
fitch_LDADD = $(LDADD)
am_gendist_OBJECTS = $(am__objects_1) gendist.$(OBJEXT)
gendist_OBJECTS = $(am_gendist_OBJECTS)
gendist_LDADD = $(LDADD)
am_kitsch_OBJECTS = $(am__objects_1) kitsch.$(OBJEXT) dist.$(OBJEXT) \
	ml.$(OBJEXT)
kitsch_OBJECTS = $(am_kitsch_OBJECTS)
kitsch_LDADD = $(LDADD)
am_mix_OBJECTS = $(am__objects_1) mix.$(OBJEXT) disc.$(OBJEXT) \
	wagner.$(OBJEXT)
mix_OBJECTS = $(am_mix_OBJECTS)
mix_LDADD = $(LDADD)
am_move_OBJECTS = $(am__objects_1) move.$(OBJEXT) disc.$(OBJEXT) \
	wagner.$(OBJEXT) moves.$(OBJEXT)
move_OBJECTS = $(am_move_OBJECTS)
move_LDADD = $(LDADD)
am_neighbor_OBJECTS = $(am__objects_1) neighbor.$(OBJEXT) \
	dist.$(OBJEXT)
neighbor_OBJECTS = $(am_neighbor_OBJECTS)
neighbor_LDADD = $(LDADD)
am_pars_OBJECTS = $(am__objects_1) pars.$(OBJEXT) discrete.$(OBJEXT) \
	parsimony.$(OBJEXT)
pars_OBJECTS = $(am_pars_OBJECTS)
pars_LDADD = $(LDADD)
am_penny_OBJECTS = $(am__objects_1) penny.$(OBJEXT) disc.$(OBJEXT) \
	wagner.$(OBJEXT)
penny_OBJECTS = $(am_penny_OBJECTS)
penny_LDADD = $(LDADD)
am_proml_OBJECTS = $(am__objects_1) proml.$(OBJEXT) \
	prom_common.$(OBJEXT) seq.$(OBJEXT) ml.$(OBJEXT)
proml_OBJECTS = $(am_proml_OBJECTS)
proml_LDADD = $(LDADD)
am_promlk_OBJECTS = $(am__objects_1) promlk.$(OBJEXT) \
	prom_common.$(OBJEXT) seq.$(OBJEXT) ml.$(OBJEXT)
promlk_OBJECTS = $(am_promlk_OBJECTS)
promlk_LDADD = $(LDADD)
am_protdist_OBJECTS = $(am__objects_1) protdist.$(OBJEXT) \
	seq.$(OBJEXT)
protdist_OBJECTS = $(am_protdist_OBJECTS)
protdist_LDADD = $(LDADD)
am_protpars_OBJECTS = $(am__objects_1) protpars.$(OBJEXT) \
	seq.$(OBJEXT) parsimony.$(OBJEXT)
protpars_OBJECTS = $(am_protpars_OBJECTS)
protpars_LDADD = $(LDADD)
am_restdist_OBJECTS = $(am__objects_1) restdist.$(OBJEXT) \
	rest_common.$(OBJEXT) seq.$(OBJEXT)
restdist_OBJECTS = $(am_restdist_OBJECTS)
restdist_LDADD = $(LDADD)
am_restml_OBJECTS = $(am__objects_1) restml.$(OBJEXT) \
	rest_common.$(OBJEXT) seq.$(OBJEXT) ml.$(OBJEXT)
restml_OBJECTS = $(am_restml_OBJECTS)
restml_LDADD = $(LDADD)
am_retree_OBJECTS = $(am__objects_1) retree.$(OBJEXT) moves.$(OBJEXT)
retree_OBJECTS = $(am_retree_OBJECTS)
retree_LDADD = $(LDADD)
am_seqboot_OBJECTS = $(am__objects_1) seqboot.$(OBJEXT) seq.$(OBJEXT)
seqboot_OBJECTS = $(am_seqboot_OBJECTS)
seqboot_LDADD = $(LDADD)
am_threshml_OBJECTS = $(am__objects_1) threshml.$(OBJEXT) \
	cont.$(OBJEXT)
threshml_OBJECTS = $(am_threshml_OBJECTS)
threshml_LDADD = $(LDADD)
am_treedist_OBJECTS = $(am__objects_1) treedist.$(OBJEXT) \
	cons.$(OBJEXT)
treedist_OBJECTS = $(am_treedist_OBJECTS)
treedist_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = appNames.c $(clique_SOURCES) $(codml_SOURCES) \
	$(consense_SOURCES) $(contml_SOURCES) $(contrast_SOURCES) \
	$(dnacomp_SOURCES) $(dnadist_SOURCES) $(dnainvar_SOURCES) \
	$(dnaml_SOURCES) $(dnamlk_SOURCES) $(dnamove_SOURCES) \
	$(dnapars_SOURCES) $(dnapenny_SOURCES) $(dollop_SOURCES) \
	$(dolmove_SOURCES) $(dolpenny_SOURCES) $(drawgram_SOURCES) \
	$(drawtree_SOURCES) $(factor_SOURCES) $(fitch_SOURCES) \
	$(gendist_SOURCES) $(kitsch_SOURCES) $(mix_SOURCES) \
	$(move_SOURCES) $(neighbor_SOURCES) $(pars_SOURCES) \
	$(penny_SOURCES) $(proml_SOURCES) $(promlk_SOURCES) \
	$(protdist_SOURCES) $(protpars_SOURCES) $(restdist_SOURCES) \
	$(restml_SOURCES) $(retree_SOURCES) $(seqboot_SOURCES) \
	$(threshml_SOURCES) $(treedist_SOURCES)
DIST_SOURCES = appNames.c $(clique_SOURCES) $(codml_SOURCES) \
	$(consense_SOURCES) $(contml_SOURCES) $(contrast_SOURCES) \
	$(dnacomp_SOURCES) $(dnadist_SOURCES) $(dnainvar_SOURCES) \
	$(dnaml_SOURCES) $(dnamlk_SOURCES) $(dnamove_SOURCES) \
	$(dnapars_SOURCES) $(dnapenny_SOURCES) $(dollop_SOURCES) \
	$(dolmove_SOURCES) $(dolpenny_SOURCES) $(drawgram_SOURCES) \
	$(drawtree_SOURCES) $(factor_SOURCES) $(fitch_SOURCES) \
	$(gendist_SOURCES) $(kitsch_SOURCES) $(mix_SOURCES) \
	$(move_SOURCES) $(neighbor_SOURCES) $(pars_SOURCES) \
	$(penny_SOURCES) $(proml_SOURCES) $(promlk_SOURCES) \
	$(protdist_SOURCES) $(protpars_SOURCES) $(restdist_SOURCES) \
	$(restml_SOURCES) $(retree_SOURCES) $(seqboot_SOURCES) \
	$(threshml_SOURCES) $(treedist_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
<<<<<<< Makefile
ACLOCAL = ${SHELL} /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/missing --run aclocal-1.9
=======
ACLOCAL = ${SHELL} /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/missing --run aclocal-1.9
>>>>>>> 1.55
AMDEP_FALSE = #
AMDEP_TRUE = 
<<<<<<< Makefile
AMTAR = ${SHELL} /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/missing --run tar
AUTOCONF = ${SHELL} /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/missing --run autoconf
AUTOHEADER = ${SHELL} /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/missing --run autoheader
AUTOMAKE = ${SHELL} /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/missing --run automake-1.9
=======
AMTAR = ${SHELL} /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/missing --run tar
AUTOCONF = ${SHELL} /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/missing --run autoconf
AUTOHEADER = ${SHELL} /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/missing --run autoheader
AUTOMAKE = ${SHELL} /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/missing --run automake-1.9
>>>>>>> 1.55
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  
CPP = 
CPPFLAGS = 
CYGPATH_W = echo
DEBUG_FALSE = #
DEBUG_TRUE = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GCOV_FALSE = 
GCOV_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
<<<<<<< Makefile
MAKEINFO = ${SHELL} /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/missing --run makeinfo
=======
MAKEINFO = ${SHELL} /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/missing --run makeinfo
>>>>>>> 1.55
OBJEXT = o
PACKAGE = phylip
PACKAGE_BUGREPORT = joe (at) gs.washington.edu
PACKAGE_NAME = phylip
PACKAGE_STRING = phylip 3.7
PACKAGE_TARNAME = phylip
PACKAGE_VERSION = 3.7
PATH_SEPARATOR = :
PHYLIP_CODE_OSTYPE = PHYLIP_COMPILE_LINIX_UNIX
PHYLIP_OSX_FALSE = 
PHYLIP_OSX_TRUE = #
PHYLIP_XFLAGS = 
PHYLIP_XLIBS = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
USERCFLAGS_FALSE = 
USERCFLAGS_TRUE = #
VERSION = 3.7
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_CC = gcc
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
<<<<<<< Makefile
install_sh = /net/gs/vol1/home/felsenst/phylip/v4.0/phylip/config/install-sh
=======
install_sh = /net/gs/vol1/home/ewalkup/Projects/active/p-refactor/new/phylip/config/install-sh
>>>>>>> 1.55
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
AUTOMAKE_OPTIONS = foreign
AM_CFLAGS = -Wall -Wfatal-errors $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5)
debugflags = -ggdb
optflags = -O3

# argh! shouldn't this be automatic by now ?!?
appNames = clique.app codml.app consense.app contml.app contrast.app dnacomp.app \
		 dnadist.app dnainvar.app \
		 dnaml.app dnamlk.app dnamove.app dnapenny.app dnapars.app \
		 dolmove.app dollop.app \
	     dolpenny.app drawgram.app drawtree.app factor.app fitch.app \
		 gendist.app kitsch.app \
	     mix.app move.app neighbor.app pars.app penny.app proml.app \
		 promlk.app protdist.app \
	     protpars.app restdist.app restml.app retree.app seqboot.app \
		 threshml.app treedist.app

drawgram_CFLAGS = 
drawtree_CFLAGS = 
drawgram_LDADD = 
drawtree_LDADD = 
COMMON_SOURCES = phylip.c phylip.h Slist.c Slist.h
clique_SOURCES = $(COMMON_SOURCES) clique.c disc.c disc.h
codml_SOURCES = $(COMMON_SOURCES) codml.c ml.h ml.c seq.h seq.c
consense_SOURCES = $(COMMON_SOURCES) consense.c cons.c cons.h
contml_SOURCES = $(COMMON_SOURCES) contml.c cont.c cont.h ml.c ml.h
contrast_SOURCES = $(COMMON_SOURCES) contrast.c cont.c cont.h
dnacomp_SOURCES = $(COMMON_SOURCES) dnacomp.c seq.c seq.h parsimony.c parsimony.h \
		dnaparsimony.c dnaparsimony.h

dnadist_SOURCES = $(COMMON_SOURCES) dnadist.c seq.c seq.h matrixd.c matrixd.h \
		pmatrix.c pmatrix.h

dnainvar_SOURCES = $(COMMON_SOURCES) dnainvar.c seq.c seq.h 
dnaml_SOURCES = $(COMMON_SOURCES) dnaml.c seq.c seq.h ml.c ml.h 
dnamlk_SOURCES = $(COMMON_SOURCES) dnamlk.c seq.c seq.h ml.c ml.h 
dnamove_SOURCES = $(COMMON_SOURCES) dnamove.c seq.c seq.h moves.c moves.h parsimony.c \
		parsimony.h dnaparsimony.c dnaparsimony.h

dnapenny_SOURCES = $(COMMON_SOURCES) dnapenny.c seq.c seq.h \
		 parsimony.c parsimony.h dnaparsimony.c dnaparsimony.h

dnapars_SOURCES = $(COMMON_SOURCES) dnapars.c seq.c seq.h parsimony.c parsimony.h \
		dnaparsimony.c dnaparsimony.h 

dolmove_SOURCES = $(COMMON_SOURCES) dolmove.c disc.c disc.h moves.c moves.h \
		dollo.c dollo.h 

dollop_SOURCES = $(COMMON_SOURCES) dollop.c disc.c disc.h dollo.c dollo.h 
dolpenny_SOURCES = $(COMMON_SOURCES) dolpenny.c disc.c disc.h dollo.c dollo.h 
drawgram_SOURCES = $(COMMON_SOURCES) drawgram.c draw.c draw2.c draw.h 
drawtree_SOURCES = $(COMMON_SOURCES) drawtree.c draw.c draw2.c draw.h 
factor_SOURCES = $(COMMON_SOURCES) factor.c 
fitch_SOURCES = $(COMMON_SOURCES) fitch.c dist.c dist.h ml.c ml.h 
gendist_SOURCES = $(COMMON_SOURCES) gendist.c 
kitsch_SOURCES = $(COMMON_SOURCES) kitsch.c dist.c dist.h ml.c ml.h 
mix_SOURCES = $(COMMON_SOURCES) mix.c disc.c disc.h wagner.c wagner.h 
move_SOURCES = $(COMMON_SOURCES) move.c disc.c disc.h wagner.c wagner.h moves.c moves.h
neighbor_SOURCES = $(COMMON_SOURCES) neighbor.c dist.c dist.h 
pars_SOURCES = $(COMMON_SOURCES) pars.c discrete.c discrete.h parsimony.c parsimony.h 
penny_SOURCES = $(COMMON_SOURCES) penny.c disc.c disc.h wagner.c wagner.h 
proml_SOURCES = $(COMMON_SOURCES) proml.c prom_common.h prom_common.c seq.c seq.h ml.c ml.h 
promlk_SOURCES = $(COMMON_SOURCES) promlk.c prom_common.h prom_common.c seq.c seq.h ml.c ml.h 
protdist_SOURCES = $(COMMON_SOURCES) protdist.c seq.c seq.h 
protpars_SOURCES = $(COMMON_SOURCES) protpars.c seq.c seq.h parsimony.c parsimony.h
restdist_SOURCES = $(COMMON_SOURCES) restdist.c rest_common.h rest_common.c seq.c seq.h 
restml_SOURCES = $(COMMON_SOURCES) restml.c rest_common.h rest_common.c seq.c seq.h ml.c ml.h 
retree_SOURCES = $(COMMON_SOURCES) retree.c moves.c moves.h 
seqboot_SOURCES = $(COMMON_SOURCES) seqboot.c seq.c seq.h 
threshml_SOURCES = $(COMMON_SOURCES) threshml.c cont.c cont.h 
treedist_SOURCES = $(COMMON_SOURCES) treedist.c cons.c cons.h 
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
appNames$(EXEEXT): $(appNames_OBJECTS) $(appNames_DEPENDENCIES) 
	@rm -f appNames$(EXEEXT)
	$(LINK) $(appNames_LDFLAGS) $(appNames_OBJECTS) $(appNames_LDADD) $(LIBS)
clique$(EXEEXT): $(clique_OBJECTS) $(clique_DEPENDENCIES) 
	@rm -f clique$(EXEEXT)
	$(LINK) $(clique_LDFLAGS) $(clique_OBJECTS) $(clique_LDADD) $(LIBS)
codml$(EXEEXT): $(codml_OBJECTS) $(codml_DEPENDENCIES) 
	@rm -f codml$(EXEEXT)
	$(LINK) $(codml_LDFLAGS) $(codml_OBJECTS) $(codml_LDADD) $(LIBS)
consense$(EXEEXT): $(consense_OBJECTS) $(consense_DEPENDENCIES) 
	@rm -f consense$(EXEEXT)
	$(LINK) $(consense_LDFLAGS) $(consense_OBJECTS) $(consense_LDADD) $(LIBS)
contml$(EXEEXT): $(contml_OBJECTS) $(contml_DEPENDENCIES) 
	@rm -f contml$(EXEEXT)
	$(LINK) $(contml_LDFLAGS) $(contml_OBJECTS) $(contml_LDADD) $(LIBS)
contrast$(EXEEXT): $(contrast_OBJECTS) $(contrast_DEPENDENCIES) 
	@rm -f contrast$(EXEEXT)
	$(LINK) $(contrast_LDFLAGS) $(contrast_OBJECTS) $(contrast_LDADD) $(LIBS)
dnacomp$(EXEEXT): $(dnacomp_OBJECTS) $(dnacomp_DEPENDENCIES) 
	@rm -f dnacomp$(EXEEXT)
	$(LINK) $(dnacomp_LDFLAGS) $(dnacomp_OBJECTS) $(dnacomp_LDADD) $(LIBS)
dnadist$(EXEEXT): $(dnadist_OBJECTS) $(dnadist_DEPENDENCIES) 
	@rm -f dnadist$(EXEEXT)
	$(LINK) $(dnadist_LDFLAGS) $(dnadist_OBJECTS) $(dnadist_LDADD) $(LIBS)
dnainvar$(EXEEXT): $(dnainvar_OBJECTS) $(dnainvar_DEPENDENCIES) 
	@rm -f dnainvar$(EXEEXT)
	$(LINK) $(dnainvar_LDFLAGS) $(dnainvar_OBJECTS) $(dnainvar_LDADD) $(LIBS)
dnaml$(EXEEXT): $(dnaml_OBJECTS) $(dnaml_DEPENDENCIES) 
	@rm -f dnaml$(EXEEXT)
	$(LINK) $(dnaml_LDFLAGS) $(dnaml_OBJECTS) $(dnaml_LDADD) $(LIBS)
dnamlk$(EXEEXT): $(dnamlk_OBJECTS) $(dnamlk_DEPENDENCIES) 
	@rm -f dnamlk$(EXEEXT)
	$(LINK) $(dnamlk_LDFLAGS) $(dnamlk_OBJECTS) $(dnamlk_LDADD) $(LIBS)
dnamove$(EXEEXT): $(dnamove_OBJECTS) $(dnamove_DEPENDENCIES) 
	@rm -f dnamove$(EXEEXT)
	$(LINK) $(dnamove_LDFLAGS) $(dnamove_OBJECTS) $(dnamove_LDADD) $(LIBS)
dnapars$(EXEEXT): $(dnapars_OBJECTS) $(dnapars_DEPENDENCIES) 
	@rm -f dnapars$(EXEEXT)
	$(LINK) $(dnapars_LDFLAGS) $(dnapars_OBJECTS) $(dnapars_LDADD) $(LIBS)
dnapenny$(EXEEXT): $(dnapenny_OBJECTS) $(dnapenny_DEPENDENCIES) 
	@rm -f dnapenny$(EXEEXT)
	$(LINK) $(dnapenny_LDFLAGS) $(dnapenny_OBJECTS) $(dnapenny_LDADD) $(LIBS)
dollop$(EXEEXT): $(dollop_OBJECTS) $(dollop_DEPENDENCIES) 
	@rm -f dollop$(EXEEXT)
	$(LINK) $(dollop_LDFLAGS) $(dollop_OBJECTS) $(dollop_LDADD) $(LIBS)
dolmove$(EXEEXT): $(dolmove_OBJECTS) $(dolmove_DEPENDENCIES) 
	@rm -f dolmove$(EXEEXT)
	$(LINK) $(dolmove_LDFLAGS) $(dolmove_OBJECTS) $(dolmove_LDADD) $(LIBS)
dolpenny$(EXEEXT): $(dolpenny_OBJECTS) $(dolpenny_DEPENDENCIES) 
	@rm -f dolpenny$(EXEEXT)
	$(LINK) $(dolpenny_LDFLAGS) $(dolpenny_OBJECTS) $(dolpenny_LDADD) $(LIBS)
drawgram$(EXEEXT): $(drawgram_OBJECTS) $(drawgram_DEPENDENCIES) 
	@rm -f drawgram$(EXEEXT)
	$(LINK) $(drawgram_LDFLAGS) $(drawgram_OBJECTS) $(drawgram_LDADD) $(LIBS)
drawtree$(EXEEXT): $(drawtree_OBJECTS) $(drawtree_DEPENDENCIES) 
	@rm -f drawtree$(EXEEXT)
	$(LINK) $(drawtree_LDFLAGS) $(drawtree_OBJECTS) $(drawtree_LDADD) $(LIBS)
factor$(EXEEXT): $(factor_OBJECTS) $(factor_DEPENDENCIES) 
	@rm -f factor$(EXEEXT)
	$(LINK) $(factor_LDFLAGS) $(factor_OBJECTS) $(factor_LDADD) $(LIBS)
fitch$(EXEEXT): $(fitch_OBJECTS) $(fitch_DEPENDENCIES) 
	@rm -f fitch$(EXEEXT)
	$(LINK) $(fitch_LDFLAGS) $(fitch_OBJECTS) $(fitch_LDADD) $(LIBS)
gendist$(EXEEXT): $(gendist_OBJECTS) $(gendist_DEPENDENCIES) 
	@rm -f gendist$(EXEEXT)
	$(LINK) $(gendist_LDFLAGS) $(gendist_OBJECTS) $(gendist_LDADD) $(LIBS)
kitsch$(EXEEXT): $(kitsch_OBJECTS) $(kitsch_DEPENDENCIES) 
	@rm -f kitsch$(EXEEXT)
	$(LINK) $(kitsch_LDFLAGS) $(kitsch_OBJECTS) $(kitsch_LDADD) $(LIBS)
mix$(EXEEXT): $(mix_OBJECTS) $(mix_DEPENDENCIES) 
	@rm -f mix$(EXEEXT)
	$(LINK) $(mix_LDFLAGS) $(mix_OBJECTS) $(mix_LDADD) $(LIBS)
move$(EXEEXT): $(move_OBJECTS) $(move_DEPENDENCIES) 
	@rm -f move$(EXEEXT)
	$(LINK) $(move_LDFLAGS) $(move_OBJECTS) $(move_LDADD) $(LIBS)
neighbor$(EXEEXT): $(neighbor_OBJECTS) $(neighbor_DEPENDENCIES) 
	@rm -f neighbor$(EXEEXT)
	$(LINK) $(neighbor_LDFLAGS) $(neighbor_OBJECTS) $(neighbor_LDADD) $(LIBS)
pars$(EXEEXT): $(pars_OBJECTS) $(pars_DEPENDENCIES) 
	@rm -f pars$(EXEEXT)
	$(LINK) $(pars_LDFLAGS) $(pars_OBJECTS) $(pars_LDADD) $(LIBS)
penny$(EXEEXT): $(penny_OBJECTS) $(penny_DEPENDENCIES) 
	@rm -f penny$(EXEEXT)
	$(LINK) $(penny_LDFLAGS) $(penny_OBJECTS) $(penny_LDADD) $(LIBS)
proml$(EXEEXT): $(proml_OBJECTS) $(proml_DEPENDENCIES) 
	@rm -f proml$(EXEEXT)
	$(LINK) $(proml_LDFLAGS) $(proml_OBJECTS) $(proml_LDADD) $(LIBS)
promlk$(EXEEXT): $(promlk_OBJECTS) $(promlk_DEPENDENCIES) 
	@rm -f promlk$(EXEEXT)
	$(LINK) $(promlk_LDFLAGS) $(promlk_OBJECTS) $(promlk_LDADD) $(LIBS)
protdist$(EXEEXT): $(protdist_OBJECTS) $(protdist_DEPENDENCIES) 
	@rm -f protdist$(EXEEXT)
	$(LINK) $(protdist_LDFLAGS) $(protdist_OBJECTS) $(protdist_LDADD) $(LIBS)
protpars$(EXEEXT): $(protpars_OBJECTS) $(protpars_DEPENDENCIES) 
	@rm -f protpars$(EXEEXT)
	$(LINK) $(protpars_LDFLAGS) $(protpars_OBJECTS) $(protpars_LDADD) $(LIBS)
restdist$(EXEEXT): $(restdist_OBJECTS) $(restdist_DEPENDENCIES) 
	@rm -f restdist$(EXEEXT)
	$(LINK) $(restdist_LDFLAGS) $(restdist_OBJECTS) $(restdist_LDADD) $(LIBS)
restml$(EXEEXT): $(restml_OBJECTS) $(restml_DEPENDENCIES) 
	@rm -f restml$(EXEEXT)
	$(LINK) $(restml_LDFLAGS) $(restml_OBJECTS) $(restml_LDADD) $(LIBS)
retree$(EXEEXT): $(retree_OBJECTS) $(retree_DEPENDENCIES) 
	@rm -f retree$(EXEEXT)
	$(LINK) $(retree_LDFLAGS) $(retree_OBJECTS) $(retree_LDADD) $(LIBS)
seqboot$(EXEEXT): $(seqboot_OBJECTS) $(seqboot_DEPENDENCIES) 
	@rm -f seqboot$(EXEEXT)
	$(LINK) $(seqboot_LDFLAGS) $(seqboot_OBJECTS) $(seqboot_LDADD) $(LIBS)
threshml$(EXEEXT): $(threshml_OBJECTS) $(threshml_DEPENDENCIES) 
	@rm -f threshml$(EXEEXT)
	$(LINK) $(threshml_LDFLAGS) $(threshml_OBJECTS) $(threshml_LDADD) $(LIBS)
treedist$(EXEEXT): $(treedist_OBJECTS) $(treedist_DEPENDENCIES) 
	@rm -f treedist$(EXEEXT)
	$(LINK) $(treedist_LDFLAGS) $(treedist_OBJECTS) $(treedist_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Slist.Po
include ./$(DEPDIR)/appNames.Po
include ./$(DEPDIR)/clique.Po
include ./$(DEPDIR)/codml.Po
include ./$(DEPDIR)/cons.Po
include ./$(DEPDIR)/consense.Po
include ./$(DEPDIR)/cont.Po
include ./$(DEPDIR)/contml.Po
include ./$(DEPDIR)/contrast.Po
include ./$(DEPDIR)/disc.Po
include ./$(DEPDIR)/discrete.Po
include ./$(DEPDIR)/dist.Po
include ./$(DEPDIR)/dnacomp.Po
include ./$(DEPDIR)/dnadist.Po
include ./$(DEPDIR)/dnainvar.Po
include ./$(DEPDIR)/dnaml.Po
include ./$(DEPDIR)/dnamlk.Po
include ./$(DEPDIR)/dnamove.Po
include ./$(DEPDIR)/dnapars.Po
include ./$(DEPDIR)/dnaparsimony.Po
include ./$(DEPDIR)/dnapenny.Po
include ./$(DEPDIR)/dollo.Po
include ./$(DEPDIR)/dollop.Po
include ./$(DEPDIR)/dolmove.Po
include ./$(DEPDIR)/dolpenny.Po
include ./$(DEPDIR)/drawgram-Slist.Po
include ./$(DEPDIR)/drawgram-draw.Po
include ./$(DEPDIR)/drawgram-draw2.Po
include ./$(DEPDIR)/drawgram-drawgram.Po
include ./$(DEPDIR)/drawgram-phylip.Po
include ./$(DEPDIR)/drawtree-Slist.Po
include ./$(DEPDIR)/drawtree-draw.Po
include ./$(DEPDIR)/drawtree-draw2.Po
include ./$(DEPDIR)/drawtree-drawtree.Po
include ./$(DEPDIR)/drawtree-phylip.Po
include ./$(DEPDIR)/factor.Po
include ./$(DEPDIR)/fitch.Po
include ./$(DEPDIR)/gendist.Po
include ./$(DEPDIR)/kitsch.Po
include ./$(DEPDIR)/matrixd.Po
include ./$(DEPDIR)/mix.Po
include ./$(DEPDIR)/ml.Po
include ./$(DEPDIR)/move.Po
include ./$(DEPDIR)/moves.Po
include ./$(DEPDIR)/neighbor.Po
include ./$(DEPDIR)/pars.Po
include ./$(DEPDIR)/parsimony.Po
include ./$(DEPDIR)/penny.Po
include ./$(DEPDIR)/phylip.Po
include ./$(DEPDIR)/pmatrix.Po
include ./$(DEPDIR)/prom_common.Po
include ./$(DEPDIR)/proml.Po
include ./$(DEPDIR)/promlk.Po
include ./$(DEPDIR)/protdist.Po
include ./$(DEPDIR)/protpars.Po
include ./$(DEPDIR)/rest_common.Po
include ./$(DEPDIR)/restdist.Po
include ./$(DEPDIR)/restml.Po
include ./$(DEPDIR)/retree.Po
include ./$(DEPDIR)/seq.Po
include ./$(DEPDIR)/seqboot.Po
include ./$(DEPDIR)/threshml.Po
include ./$(DEPDIR)/treedist.Po
include ./$(DEPDIR)/wagner.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

drawgram-phylip.o: phylip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-phylip.o -MD -MP -MF "$(DEPDIR)/drawgram-phylip.Tpo" -c -o drawgram-phylip.o `test -f 'phylip.c' || echo '$(srcdir)/'`phylip.c; \
	then mv -f "$(DEPDIR)/drawgram-phylip.Tpo" "$(DEPDIR)/drawgram-phylip.Po"; else rm -f "$(DEPDIR)/drawgram-phylip.Tpo"; exit 1; fi
#	source='phylip.c' object='drawgram-phylip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-phylip.o `test -f 'phylip.c' || echo '$(srcdir)/'`phylip.c

drawgram-phylip.obj: phylip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-phylip.obj -MD -MP -MF "$(DEPDIR)/drawgram-phylip.Tpo" -c -o drawgram-phylip.obj `if test -f 'phylip.c'; then $(CYGPATH_W) 'phylip.c'; else $(CYGPATH_W) '$(srcdir)/phylip.c'; fi`; \
	then mv -f "$(DEPDIR)/drawgram-phylip.Tpo" "$(DEPDIR)/drawgram-phylip.Po"; else rm -f "$(DEPDIR)/drawgram-phylip.Tpo"; exit 1; fi
#	source='phylip.c' object='drawgram-phylip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-phylip.obj `if test -f 'phylip.c'; then $(CYGPATH_W) 'phylip.c'; else $(CYGPATH_W) '$(srcdir)/phylip.c'; fi`

drawgram-Slist.o: Slist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-Slist.o -MD -MP -MF "$(DEPDIR)/drawgram-Slist.Tpo" -c -o drawgram-Slist.o `test -f 'Slist.c' || echo '$(srcdir)/'`Slist.c; \
	then mv -f "$(DEPDIR)/drawgram-Slist.Tpo" "$(DEPDIR)/drawgram-Slist.Po"; else rm -f "$(DEPDIR)/drawgram-Slist.Tpo"; exit 1; fi
#	source='Slist.c' object='drawgram-Slist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-Slist.o `test -f 'Slist.c' || echo '$(srcdir)/'`Slist.c

drawgram-Slist.obj: Slist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-Slist.obj -MD -MP -MF "$(DEPDIR)/drawgram-Slist.Tpo" -c -o drawgram-Slist.obj `if test -f 'Slist.c'; then $(CYGPATH_W) 'Slist.c'; else $(CYGPATH_W) '$(srcdir)/Slist.c'; fi`; \
	then mv -f "$(DEPDIR)/drawgram-Slist.Tpo" "$(DEPDIR)/drawgram-Slist.Po"; else rm -f "$(DEPDIR)/drawgram-Slist.Tpo"; exit 1; fi
#	source='Slist.c' object='drawgram-Slist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-Slist.obj `if test -f 'Slist.c'; then $(CYGPATH_W) 'Slist.c'; else $(CYGPATH_W) '$(srcdir)/Slist.c'; fi`

drawgram-drawgram.o: drawgram.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-drawgram.o -MD -MP -MF "$(DEPDIR)/drawgram-drawgram.Tpo" -c -o drawgram-drawgram.o `test -f 'drawgram.c' || echo '$(srcdir)/'`drawgram.c; \
	then mv -f "$(DEPDIR)/drawgram-drawgram.Tpo" "$(DEPDIR)/drawgram-drawgram.Po"; else rm -f "$(DEPDIR)/drawgram-drawgram.Tpo"; exit 1; fi
#	source='drawgram.c' object='drawgram-drawgram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-drawgram.o `test -f 'drawgram.c' || echo '$(srcdir)/'`drawgram.c

drawgram-drawgram.obj: drawgram.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-drawgram.obj -MD -MP -MF "$(DEPDIR)/drawgram-drawgram.Tpo" -c -o drawgram-drawgram.obj `if test -f 'drawgram.c'; then $(CYGPATH_W) 'drawgram.c'; else $(CYGPATH_W) '$(srcdir)/drawgram.c'; fi`; \
	then mv -f "$(DEPDIR)/drawgram-drawgram.Tpo" "$(DEPDIR)/drawgram-drawgram.Po"; else rm -f "$(DEPDIR)/drawgram-drawgram.Tpo"; exit 1; fi
#	source='drawgram.c' object='drawgram-drawgram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-drawgram.obj `if test -f 'drawgram.c'; then $(CYGPATH_W) 'drawgram.c'; else $(CYGPATH_W) '$(srcdir)/drawgram.c'; fi`

drawgram-draw.o: draw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-draw.o -MD -MP -MF "$(DEPDIR)/drawgram-draw.Tpo" -c -o drawgram-draw.o `test -f 'draw.c' || echo '$(srcdir)/'`draw.c; \
	then mv -f "$(DEPDIR)/drawgram-draw.Tpo" "$(DEPDIR)/drawgram-draw.Po"; else rm -f "$(DEPDIR)/drawgram-draw.Tpo"; exit 1; fi
#	source='draw.c' object='drawgram-draw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-draw.o `test -f 'draw.c' || echo '$(srcdir)/'`draw.c

drawgram-draw.obj: draw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-draw.obj -MD -MP -MF "$(DEPDIR)/drawgram-draw.Tpo" -c -o drawgram-draw.obj `if test -f 'draw.c'; then $(CYGPATH_W) 'draw.c'; else $(CYGPATH_W) '$(srcdir)/draw.c'; fi`; \
	then mv -f "$(DEPDIR)/drawgram-draw.Tpo" "$(DEPDIR)/drawgram-draw.Po"; else rm -f "$(DEPDIR)/drawgram-draw.Tpo"; exit 1; fi
#	source='draw.c' object='drawgram-draw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-draw.obj `if test -f 'draw.c'; then $(CYGPATH_W) 'draw.c'; else $(CYGPATH_W) '$(srcdir)/draw.c'; fi`

drawgram-draw2.o: draw2.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-draw2.o -MD -MP -MF "$(DEPDIR)/drawgram-draw2.Tpo" -c -o drawgram-draw2.o `test -f 'draw2.c' || echo '$(srcdir)/'`draw2.c; \
	then mv -f "$(DEPDIR)/drawgram-draw2.Tpo" "$(DEPDIR)/drawgram-draw2.Po"; else rm -f "$(DEPDIR)/drawgram-draw2.Tpo"; exit 1; fi
#	source='draw2.c' object='drawgram-draw2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-draw2.o `test -f 'draw2.c' || echo '$(srcdir)/'`draw2.c

drawgram-draw2.obj: draw2.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -MT drawgram-draw2.obj -MD -MP -MF "$(DEPDIR)/drawgram-draw2.Tpo" -c -o drawgram-draw2.obj `if test -f 'draw2.c'; then $(CYGPATH_W) 'draw2.c'; else $(CYGPATH_W) '$(srcdir)/draw2.c'; fi`; \
	then mv -f "$(DEPDIR)/drawgram-draw2.Tpo" "$(DEPDIR)/drawgram-draw2.Po"; else rm -f "$(DEPDIR)/drawgram-draw2.Tpo"; exit 1; fi
#	source='draw2.c' object='drawgram-draw2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawgram_CFLAGS) $(CFLAGS) -c -o drawgram-draw2.obj `if test -f 'draw2.c'; then $(CYGPATH_W) 'draw2.c'; else $(CYGPATH_W) '$(srcdir)/draw2.c'; fi`

drawtree-phylip.o: phylip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-phylip.o -MD -MP -MF "$(DEPDIR)/drawtree-phylip.Tpo" -c -o drawtree-phylip.o `test -f 'phylip.c' || echo '$(srcdir)/'`phylip.c; \
	then mv -f "$(DEPDIR)/drawtree-phylip.Tpo" "$(DEPDIR)/drawtree-phylip.Po"; else rm -f "$(DEPDIR)/drawtree-phylip.Tpo"; exit 1; fi
#	source='phylip.c' object='drawtree-phylip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-phylip.o `test -f 'phylip.c' || echo '$(srcdir)/'`phylip.c

drawtree-phylip.obj: phylip.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-phylip.obj -MD -MP -MF "$(DEPDIR)/drawtree-phylip.Tpo" -c -o drawtree-phylip.obj `if test -f 'phylip.c'; then $(CYGPATH_W) 'phylip.c'; else $(CYGPATH_W) '$(srcdir)/phylip.c'; fi`; \
	then mv -f "$(DEPDIR)/drawtree-phylip.Tpo" "$(DEPDIR)/drawtree-phylip.Po"; else rm -f "$(DEPDIR)/drawtree-phylip.Tpo"; exit 1; fi
#	source='phylip.c' object='drawtree-phylip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-phylip.obj `if test -f 'phylip.c'; then $(CYGPATH_W) 'phylip.c'; else $(CYGPATH_W) '$(srcdir)/phylip.c'; fi`

drawtree-Slist.o: Slist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-Slist.o -MD -MP -MF "$(DEPDIR)/drawtree-Slist.Tpo" -c -o drawtree-Slist.o `test -f 'Slist.c' || echo '$(srcdir)/'`Slist.c; \
	then mv -f "$(DEPDIR)/drawtree-Slist.Tpo" "$(DEPDIR)/drawtree-Slist.Po"; else rm -f "$(DEPDIR)/drawtree-Slist.Tpo"; exit 1; fi
#	source='Slist.c' object='drawtree-Slist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-Slist.o `test -f 'Slist.c' || echo '$(srcdir)/'`Slist.c

drawtree-Slist.obj: Slist.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-Slist.obj -MD -MP -MF "$(DEPDIR)/drawtree-Slist.Tpo" -c -o drawtree-Slist.obj `if test -f 'Slist.c'; then $(CYGPATH_W) 'Slist.c'; else $(CYGPATH_W) '$(srcdir)/Slist.c'; fi`; \
	then mv -f "$(DEPDIR)/drawtree-Slist.Tpo" "$(DEPDIR)/drawtree-Slist.Po"; else rm -f "$(DEPDIR)/drawtree-Slist.Tpo"; exit 1; fi
#	source='Slist.c' object='drawtree-Slist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-Slist.obj `if test -f 'Slist.c'; then $(CYGPATH_W) 'Slist.c'; else $(CYGPATH_W) '$(srcdir)/Slist.c'; fi`

drawtree-drawtree.o: drawtree.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-drawtree.o -MD -MP -MF "$(DEPDIR)/drawtree-drawtree.Tpo" -c -o drawtree-drawtree.o `test -f 'drawtree.c' || echo '$(srcdir)/'`drawtree.c; \
	then mv -f "$(DEPDIR)/drawtree-drawtree.Tpo" "$(DEPDIR)/drawtree-drawtree.Po"; else rm -f "$(DEPDIR)/drawtree-drawtree.Tpo"; exit 1; fi
#	source='drawtree.c' object='drawtree-drawtree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-drawtree.o `test -f 'drawtree.c' || echo '$(srcdir)/'`drawtree.c

drawtree-drawtree.obj: drawtree.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-drawtree.obj -MD -MP -MF "$(DEPDIR)/drawtree-drawtree.Tpo" -c -o drawtree-drawtree.obj `if test -f 'drawtree.c'; then $(CYGPATH_W) 'drawtree.c'; else $(CYGPATH_W) '$(srcdir)/drawtree.c'; fi`; \
	then mv -f "$(DEPDIR)/drawtree-drawtree.Tpo" "$(DEPDIR)/drawtree-drawtree.Po"; else rm -f "$(DEPDIR)/drawtree-drawtree.Tpo"; exit 1; fi
#	source='drawtree.c' object='drawtree-drawtree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-drawtree.obj `if test -f 'drawtree.c'; then $(CYGPATH_W) 'drawtree.c'; else $(CYGPATH_W) '$(srcdir)/drawtree.c'; fi`

drawtree-draw.o: draw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-draw.o -MD -MP -MF "$(DEPDIR)/drawtree-draw.Tpo" -c -o drawtree-draw.o `test -f 'draw.c' || echo '$(srcdir)/'`draw.c; \
	then mv -f "$(DEPDIR)/drawtree-draw.Tpo" "$(DEPDIR)/drawtree-draw.Po"; else rm -f "$(DEPDIR)/drawtree-draw.Tpo"; exit 1; fi
#	source='draw.c' object='drawtree-draw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-draw.o `test -f 'draw.c' || echo '$(srcdir)/'`draw.c

drawtree-draw.obj: draw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-draw.obj -MD -MP -MF "$(DEPDIR)/drawtree-draw.Tpo" -c -o drawtree-draw.obj `if test -f 'draw.c'; then $(CYGPATH_W) 'draw.c'; else $(CYGPATH_W) '$(srcdir)/draw.c'; fi`; \
	then mv -f "$(DEPDIR)/drawtree-draw.Tpo" "$(DEPDIR)/drawtree-draw.Po"; else rm -f "$(DEPDIR)/drawtree-draw.Tpo"; exit 1; fi
#	source='draw.c' object='drawtree-draw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-draw.obj `if test -f 'draw.c'; then $(CYGPATH_W) 'draw.c'; else $(CYGPATH_W) '$(srcdir)/draw.c'; fi`

drawtree-draw2.o: draw2.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-draw2.o -MD -MP -MF "$(DEPDIR)/drawtree-draw2.Tpo" -c -o drawtree-draw2.o `test -f 'draw2.c' || echo '$(srcdir)/'`draw2.c; \
	then mv -f "$(DEPDIR)/drawtree-draw2.Tpo" "$(DEPDIR)/drawtree-draw2.Po"; else rm -f "$(DEPDIR)/drawtree-draw2.Tpo"; exit 1; fi
#	source='draw2.c' object='drawtree-draw2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-draw2.o `test -f 'draw2.c' || echo '$(srcdir)/'`draw2.c

drawtree-draw2.obj: draw2.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -MT drawtree-draw2.obj -MD -MP -MF "$(DEPDIR)/drawtree-draw2.Tpo" -c -o drawtree-draw2.obj `if test -f 'draw2.c'; then $(CYGPATH_W) 'draw2.c'; else $(CYGPATH_W) '$(srcdir)/draw2.c'; fi`; \
	then mv -f "$(DEPDIR)/drawtree-draw2.Tpo" "$(DEPDIR)/drawtree-draw2.Po"; else rm -f "$(DEPDIR)/drawtree-draw2.Tpo"; exit 1; fi
#	source='draw2.c' object='drawtree-draw2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(drawtree_CFLAGS) $(CFLAGS) -c -o drawtree-draw2.obj `if test -f 'draw2.c'; then $(CYGPATH_W) 'draw2.c'; else $(CYGPATH_W) '$(srcdir)/draw2.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am


#
# This is where the clickable executables are made for Mac OSX
#
%.app:     %
	/Developer/Tools/Rez -d __DARWIN__ -t APPL Carbon.r -o $<
	/Developer/Tools/SetFile -a C $<
	-mkdir -p $@/Contents/MacOS
	-mkdir -p $@/Contents/Resources
	sed -e "s/IDENTIFIER/$</" \
	-e "s/COMMAND/$<.command/" \
	-e "s/EXECUTABLE/$</" \
	-e "s/ICONNAME/$</" \
	-e "s/VERSION/3.7/" \
	mac/Info.plist.in > $@/Contents/Info.plist
	sed -e "s/EXECUTABLE/$</" \
	mac/command.in > $@/Contents/MacOS/$<.command
	chmod ug+x $@/Contents/MacOS/$<.command
	echo -n "APPL????" >$@/Contents/PkgInfo
	cp $< $@/Contents/MacOS/$<
	cp -f mac/$<.icns $@/Contents/Resources/$<.icns
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
